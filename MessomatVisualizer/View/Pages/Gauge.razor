@page "/Gauge"
<div class="d-flex justify-content-center align-items-center flex-wrap">
    <div >
        <RadzenArcGauge Style="width: 1500px; height: 600px;">
            <RadzenArcGaugeScale Step="20" Min="0" Max="1024" MinorStep="2" Radius="1.5" TickPosition=@tickPosition Y="0.9" Margin="0">
                <RadzenArcGaugeScaleValue Value=@lightValue>
                    <Template Context="pointer">
                        <h4>
                            @pointer.Value
                        </h4>
                    </Template>
                </RadzenArcGaugeScaleValue>
            </RadzenArcGaugeScale>
        </RadzenArcGauge>
        <h1 class="text-center"> Button Value: @buttonValue</h1>
    </div>
    <div class="d-flex flex-row justify-content-center align-items-center p-5" style="width: 1200px;">
        <div class="text-center">
            <h3>Timer Intervall:</h3>
            <RadzenSlider Min="1" Max="4" @bind-Value="@timerIntervall"/>
            <h3>@timerIntervall</h3>
        </div>
        <RadzenDropDown class="m-4" TValue="string" Value=@selectedMode Data=@modes Change="@(args => selectedMode = $"{args}")" />
        <RadzenButton class="m-4" ButtonStyle="ButtonStyle.Success" Text="Start Transmission"></RadzenButton>
        <RadzenButton class="m-4" ButtonStyle="ButtonStyle.Danger" Text="Stop Transmission"></RadzenButton>
    </div>
</div>


@code {

    int lightValue = 0;

    string buttonValue;
    bool disabled = true;

    double timerIntervall = 1;

    IEnumerable<string> modes = new[] {"Light", "Button", "All"};
    string selectedMode = "All";

    IEnumerable<GaugeTickPosition> tickPositions = Enum.GetValues(typeof(GaugeTickPosition)).Cast<GaugeTickPosition>();
    GaugeTickPosition tickPosition = GaugeTickPosition.Outside;



}